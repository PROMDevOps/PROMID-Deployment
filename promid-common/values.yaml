kong:
  enabled: true
  fullnameOverride: kong
  proxy:
    type: ClusterIP

  dblessConfig:
    configMap: kong-config

  env:
    database: "off"

  customEnv:
    DUMMY: "006" #Update this when Kong configuration is changed in order to restart the pods

  ingressController:
    enabled: false # This is required in DB less mode

  admin:
    enabled: true
    type: ClusterIP
    http:
      enabled: true

konga:
  nameOverride: konga
  enabled: true
  podDisruptionBudget:
    enabled: false
  pods:
    controller: deployment
    image:
      name: "pantsel/konga"
      tag: "latest"
    ports:
      - name: http
        containerPort: 1337
        protocol: TCP
    env:
      - name: KONGA_SEED_USER_DATA_SOURCE_FILE
        value: /configs/konga-users.cfg

      - name: KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE
        value: /configs/konga-nodes.cfg
    volumes:
      - name: config
        secret:
          secretName: konga-credentials
          optional: false
    volumeMounts:
      - name: config
        mountPath: /configs
  ingress:
    enabled: false

  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 1337
        protocol: TCP
        name: http

keycloak:
  fullnameOverride: keycloak
  extraEnv: |
    - name: KEYCLOAK_LOGLEVEL
      value: DEBUG
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_USER
      valueFrom:
        secretKeyRef:
          name: keycloak-credential
          key: keycloak-user
    - name: KEYCLOAK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: keycloak-credential
          key: keycloak-password
  securityContext:
    runAsUser: 0
    runAsNonRoot: false

  postgresql:
    fullnameOverride: keycloak-postgresql
    enabled: true  
    persistence:
      size: 20Gi


### PromID API ###
promid-api:
  enabled: true
  nameOverride: promid-api

  podDisruptionBudget:
    enabled: false

  pods:
    controller: deployment
    image:
      name: asia-southeast1-docker.pkg.dev/promrub-personal-use/promid/promsso-api
    imagePullSecrets :
      - name: gcr-image-pull # TODO : use External-Secret to create this
    #volumes:
    #  - name: appsetting
    #    secret:
    #      secretName: carpark-api-appsetting
    #      optional: false
    #volumeMounts:
    #  - name: appsetting
    #    mountPath: /app/appsettings.json
    #    subPath: appsettings.json

  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 80
        protocol: TCP
        name: http

promid-web:
  enabled: true
  nameOverride: promid-web

  podDisruptionBudget:
    enabled: false

  pods:
    controller: deployment
    image:
      name: asia-southeast1-docker.pkg.dev/promrub-personal-use/promid/promsso-web
  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 80
        protocol: TCP
        name: http
